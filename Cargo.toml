[package]
name = "embassy-usb-vendor-example"
version = "0.1.0"
edition = "2021"
authors = ["Piers Finlayson <piers@piers.rocks>"]
description = "An example (custom) USB Vendor Device implementation, in Rust, using embassy"
repository = ""
license = "MIT"
keywords = ["embassy", "embedded", "usb", "vendor"]

[[bin]]
name = "embassy-usb-vendor-example"
test = false

[dependencies]
embassy-executor = { version = "0.7.0", features = ["task-arena-size-98304", "arch-cortex-m", "executor-thread", "executor-interrupt", "defmt"] }
embassy-rp = { version = "0.3.0", features = ["defmt", "unstable-pac", "time-driver", "critical-section-impl", "rp2040"] }
embassy-usb = { version = "0.4.0", features = ["defmt"] }
embassy-futures = { version = "0.1.0" }
embassy-sync = { version = "0.6.2", features = ["defmt"] }
embassy-time = { version = "0.4.0", features = ["defmt", "defmt-timestamp-uptime"] }
embassy-boot = { version = "0.4.0" }
static_cell = { version = "2.1" }
portable-atomic = { version = "1.10", features = ["critical-section"] }
heapless = { version = "0.8.0" }

cyw43 = { version = "0.3.0", features = ["defmt", "firmware-logs"] }
cyw43-pio = { version = "0.3.0", features = ["defmt"] }

defmt = "0.3"
defmt-rtt = "0.4"

cortex-m = { version = "0.7.6", features = ["inline-asm"] }
cortex-m-rt = "0.7.0"
panic-probe = { version = "0.3", features = ["print-defmt"] }

[profile.release]
debug = 2
lto = true
opt-level = 'z'

[profile.dev]
debug = 2
lto = true
opt-level = "z"
